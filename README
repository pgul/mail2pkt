MAIL-TO-PKT v0.2
----------------

 What is it?
 
  This program reads the standard input for a base64 mime enconded email and
  decodes the attachment into the protected inbound directory defined in
  fidoconfig or in an user-selected directory.
 
 Where can I find it?
 
  You can get the latest version from http://husky.physcip.uni-stuttgart.de
 
 How must I use it?
 
  It is designed to be a procmail filter, but can be used in other ways, such
  as called from within a script. If you define the right recipes for procmail,
  you don't even need a dedicated mail account. You can also call it from your
  .forward file directly, but it doesn't work when your configuration file is
  in a non standard location (i.e. /etc/fido).

  Once installed (see INSTALL), follow this steps to get it working. Note that
  ~/ means the home directory of the user running all the fido stuff.

  As said above, there are several ways to call mail2pkt, but here I will
  discuss only as a procmail filter. This is the most powerfull way to call
  mail2pkt.

  First, you must tell ~/.forward to, yes, forward :-) all incoming mails to
  procmail. So, first, ~/.forward must be (I assume you have already a working
  version of procmail in your system):
 
---cut---cut---
|/usr/bin/procmail
---cut---cut---

  Don't put any spaces between '|' and the full path to procmail.

  Now, you must build a proper ~/.procmailrc. Use the provided procmailrc for
  reference (that means cut & paste :-))

  Of course you should put whatever recipes you need. Take a look at the
  procmailrc(5) manpage for further details.

  It it suposed that mail2pkt is installed in the binary directory of husky,
  and it is in the user's PATH. If not, you must put the full path to the
  mail2pkt binary (i.e. /usr/local/bin/mail2pkt).

  This way, you can make several procmail recipes for each link you have, based
  in the subject, from, to, or whatever field you want, and don't even need a
  dedicated mail account!


 Notes

  * If no command line arguments are given, mail2pkt will read fidoconfig for
  the inbound. You can give a different inbound directory in the command line.
  For example:
 
    mail2pkt /var/spool/in/fido

  * Only base64 encoded files will be decoded in this version! If piped mails
  are not base64, the plain message will dessapear! Future versions may support
  different encodings. 

  * Mails without attachments will be ignored and deleted.

  * Message bodys are ignored, so tell your links not to write important info
  in the mails they send to you.

  * I AM NOT RESPONSABLE FOR ANY LOST OF DATA BECAUSE OF MAIL2PKT.

  * All the files are created in lowercase.

  * Take care of file permissions! If you receive the mail from a POP server
  with a user, and process the packets with another user, there will be 
  permissions troubles. A solution could be this:

  The POP receiving user is pop and the fidonet processing user is fido, so:

  In /home/pop/.procmailrc, put this recipe:

---cut---cut---
:0:
* ^Subject.*Fido.*
! fido
---cut---cut---

  In /home/fido/.procmailrc, put this one:

---cut---cut---
:0:
* ^From.pop
| mail2pkt
---cut---cut---

  Now, the files are created with the correct owner.


 Feedback

  I wanna know who's using my program, so please write me. I hope to hear back
  from you.

 German Theler
 german@linuxfreak.com
 4:905/210